// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id        String   @id @db.VarChar(100)
  username  String   @unique @db.VarChar(155)
  password  String   @db.VarChar(155)
  display   String   @db.VarChar(150)
  role      Role     @default(NURSE)
  picture   String?  @db.VarChar(255)
  status    Boolean  @default(true)
  comment   String?  @db.VarChar(155)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Drugs {
  id           String   @unique @db.VarChar(100)
  drugCode     String   @id @db.VarChar(100)
  drugName     String   @db.VarChar(200)
  unit         String   @db.VarChar(155)
  drugLot      String   @db.VarChar(155)
  drugExpire   DateTime
  drugPriority Int      @default(1) @db.Integer
  weight       Int?     @default(0) @db.Integer
  status       Boolean  @default(true)
  picture      String?  @db.VarChar(255)
  Orders       Orders[]
  comment      String?  @db.VarChar(155)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now()) @updatedAt
  Group        Group[]
}

model Inventory {
  id             String           @id @db.VarChar(100)
  position       Int              @db.Integer
  qty            Int              @db.Integer
  min            Int              @db.Integer
  max            Int              @db.Integer
  status         Boolean          @default(true)
  machineId      String           @db.VarChar(100)
  machine        Machine          @relation(fields: [machineId], references: [id])
  comment        String?          @db.VarChar(155)
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @default(now()) @updatedAt
  Group          Group[]
  GroupInventory GroupInventory[]
}

model Group {
  id          String           @id @db.VarChar(100)
  drugId      String           @db.VarChar(100)
  inventoryId String           @db.VarChar(100)
  groupStatus Int              @db.Integer
  comment     String?          @db.VarChar(255)
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @default(now()) @updatedAt
  drug        Drugs            @relation(fields: [drugId], references: [id])
  inventory   Inventory        @relation(fields: [inventoryId], references: [id])
  groupItems  GroupInventory[]
}

model GroupInventory {
  id          String    @id @db.VarChar(100)
  groupId     String    @db.VarChar(100)
  inventoryId String    @db.VarChar(100)
  min         Int       @default(0) @db.Integer
  max         Int       @default(0) @db.Integer
  group       Group     @relation(fields: [groupId], references: [id])
  inventory   Inventory @relation(fields: [inventoryId], references: [id])
}

model Machine {
  id          String      @id @db.VarChar(100)
  machineName String      @db.VarChar(200)
  location    String      @db.VarChar(200)
  capacity    Int         @db.Integer
  status      Boolean     @default(true)
  Inventory   Inventory[]
  Orders      Orders[]
  comment     String?     @db.VarChar(155)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @default(now()) @updatedAt
}

model Orders {
  id             String        @id @db.VarChar(200)
  prescriptionId String        @db.VarChar(200)
  drugId         String        @db.VarChar(100)
  drugName       String        @db.VarChar(150)
  qty            Int           @db.Integer
  unit           String        @db.VarChar(150)
  drugLot        String        @db.VarChar(155)
  drugExpire     DateTime
  drugPriority   Int           @default(1) @db.Integer
  position       Int           @db.Integer
  machineId      String?       @db.VarChar(100)
  prescription   Prescriptions @relation(fields: [prescriptionId], references: [id])
  drug           Drugs         @relation(fields: [drugId], references: [drugCode])
  machine        Machine?      @relation(fields: [machineId], references: [id])
  status         String        @db.VarChar(100)
  comment        String?       @db.VarChar(155)
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @default(now()) @updatedAt
}

model Prescriptions {
  id           String   @id @db.VarChar(200)
  hn           String   @db.VarChar(20)
  patientName  String   @db.VarChar(200)
  wardCode     String?  @db.VarChar(20)
  wardDesc     String?  @db.VarChar(200)
  priorityCode String?  @db.VarChar(20)
  priorityDesc String?  @db.VarChar(200)
  status       String   @db.VarChar(100)
  order        Orders[]
  comment      String?  @db.VarChar(155)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now()) @updatedAt
}

enum Role {
  SUPER
  SERVICE
  PHARMACIST
  PHARMACIST_ASSISTANCE
  HEAD_NURSE
  NURSE
}
